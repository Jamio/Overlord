//****************************************************************************************************************
//                 D-Day: Operation Overlord
//                   Created By SkyDong
//                        v 1.04
//
//****************************************************************************************************************



author			= "Jamio";
onLoadName		= "D-Day: Operation Overlord";
onLoadMission   = "Charlie Company, (506th PIR), 101st Airborne Division is tasked with capturing the town of Neaville.";
loadScreen		= "Pics\loading_pic_mod.jpg";
onLoadMissionTime       = 1;


ReviveMode = 1;                         //0: disabled, 1: enabled, 2: controlled by player attributes
ReviveUnconsciousStateMode = 0;         //0: basic, 1: advanced, 2: realistic
ReviveRequiredTrait = 0;                //0: none, 1: medic trait is required
ReviveRequiredItems = 0;                //0: none, 1: medkit, 2: medkit or first aid kit
ReviveRequiredItemsFakConsumed = 0;     //0: first aid kit is not consumed upon revive, 1: first aid kit is consumed
ReviveDelay = 6;                        //time needed to revive someone (in secs)
ReviveMedicSpeedMultiplier = 2;         //speed multiplier for revive performed by medic
ReviveForceRespawnDelay = 3;            //time needed to perform force respawn (in secs)
ReviveBleedOutDelay = 300;              //unconscious state duration (in secs)

overviewPicture = "Pics\loading_pic_mod.jpg";
overviewText = "This is a fully persistent COOP CTI style campaign that can support from 1 to 60 players. This mission depicts a fictionalized version of the Allied airborne invasion of Normandy in WWII. You play as Charlie Company, (506th PIR), of the 101st Airborne Division. Your company's main task is to capture the town of Neaville and prevent German forces from pushing through to the beach on D-Day, June 6, 1944.";


respawn = 3;
respawnDelay = 5;
//respawnTemplates[] = {"Revive","Tickets","Counter","Spectator","MenuInventory","MenuPosition"}; 
//respawnTemplatesGuer[] = {"Tickets","Counter","MenuInventory","MenuPosition"};
respawnOnStart = -1;
disabledAI = 1;
enableDebugConsole = 1;






// Register a simple keypress to an action for CBA
#include "\a3\ui_f\hpp\defineDIKCodes.inc"
#include "Functions\Menu\defines.hpp"
#include "Functions\Menu\Command\command_menu_main.hpp"
#include "Functions\Menu\Supply\supply_menu_main.hpp"
#include "Functions\Menu\View\view_controls.hpp"
#include "Functions\Menu\Build\build_menu_main.hpp"
#include "Functions\Menu\Recruit\recruit_menu_main.hpp"
#include "Functions\Menu\Squad\squad_menu_main.hpp"
#include "Functions\Menu\Sector\sector_notification.hpp"
#include "Scripts\Hints\advanced_hints.hpp"
#include "\a3\ui_f\hpp\definecommongrids.inc"



//*************************************************************************
//
//                 MISSION PARAMETERS
//
//*************************************************************************

class Params
{


	class Param_LoadSave
	{
		title = "Load / New Game"; // Param name visible in the list
		values[] = {0,1}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"Load Save","Start New Game"}; // Description of each selectable item
		default = 0; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};
	
  	  class Spacer01 {
     	  title = "";
       	  values[] = {""};
          texts[] = {""};
          default = "";
          };	
		  
  	  class Spacer02 {
     	  title = "";
       	  values[] = {""};
          texts[] = {""};
          default = "";
          };
		  
  	  class Spacer03 {
     	  title = "--   NOTE: Parameters marked with a ' * ' cannot be changed between loaded saved games.   --";
       	  values[] = {""};
          texts[] = {""};
          default = "";
          };	

	
  	  class Spacer04 {
     	  title = "";
       	  values[] = {""};
          texts[] = {""};
          default = "";
          };

  	  class Spacer05 {
     	  title = "";
       	  values[] = {""};
          texts[] = {""};
          default = "";
          };


		  
		  class PlayerOptions {
          title = "-- PLAYER OPTIONS --";
          values[] = {""};
          texts[] = {""};
          default = "";
          };
		  
	class Player_stamina
	{
		title = "Player Stamina"; // Param name visible in the list
		values[] = {0,1}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"OFF","ON"}; // Description of each selectable item
		default = 0; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};
		  
	class Player_killConfirmed
	{
		title = "Kill Confirmed Sound Effect"; // Param name visible in the list
		values[] = {0,1}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"OFF","ON"}; // Description of each selectable item
		default = 1; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};
	
  	  class Spacer1 {
     	  title = "";
       	  values[] = {""};
          texts[] = {""};
          default = "";
          };


          class RespawnOptions {
          title = "-- MISSION OPTIONS --";
          values[] = {""};
          texts[] = {""};
          default = "";
          };
		  
	class Time_multiply
	{
		title = "Time Multiplier"; // Param name visible in the list
		values[] = {1,2,3,4}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"1X","2X","3X","4X"}; // Description of each selectable item
		default = 1; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};
	
	class Sector_Info
	{
		title = "Sector Info Notifications"; // Param name visible in the list
		values[] = {0,1}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"OFF","ON"}; // Description of each selectable item
		default = 1; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};

	class cutscene_Param
	{
		title = "Cutscenes"; // Param name visible in the list
		values[] = {0,1}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"Disabled","Enabled"}; // Description of each selectable item
		default = 1; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};

	class Respawn_Timer
	{
		title = "Respawn Delay (Time bewteen waves of reinforcements)"; // Param name visible in the list
		values[] = {60,120,180,240,300}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"1 min","2 min","3 min","4 min","5 min"}; // Description of each selectable item
		default = 60; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};

	class Tickets_num
	{
		title = "* Reinforcement Tickets  (Mission Fails at 0 Tickets Remaining)"; // Param name visible in the list
		values[] = {100,200,300,400,1000}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"100","200","300","400","1000"}; 
		default = 200; // Default value; must be listed in 'values' array, otherwise 0 is used
	};
	
	class Param_rallyPoint
	{
		title = "Squad Rally Points (Placed by Squad Leaders from Command Menu)"; // Param name visible in the list
		values[] = {0,1}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"Disabled","Enabled"}; // Description of each selectable item
		default = 1; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};	
	
	class Radio_Param
	{
		title = "Radios (Restricts who can use radios)"; // Param name visible in the list
		values[] = {0,1}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"Everyone","Squad Leaders \ Team Leaders \ Radiomen"}; 
		default = 1; // Default value; must be listed in 'values' array, otherwise 0 is used
	};



  	  class Spacer2 {
     	  title = "";
       	  values[] = {""};
          texts[] = {""};
          default = "";
          };


          class buildOptions {
          title = "-- SUPPLY / FORTIFICATION OPTIONS --";
          values[] = {""};
          texts[] = {""};
          default = "";
          };
		  
		  
	class supply_drop
	{
		title = "* Max Supply Drops Available"; // Param name visible in the list
		values[] = {0,1,2,3,4,5,10,100}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"0","1","2","3","4","5","10","100",}; 
		default = 3; // Default value; must be listed in 'values' array, otherwise 0 is used
	};  
	
	
	class supply_total
	{
		title = "* Starting Supply Budget"; // Param name visible in the list
		values[] = {100,200,300,400,500,600,1000,2500,5000}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"100","200","300","400","500","600","1000","2500","5000"}; 
		default = 500; // Default value; must be listed in 'values' array, otherwise 0 is used
	};
		  
	class supply_crate
	{
		title = "* Supplies per Crate (Capturable Supply Crates)"; // Param name visible in the list
		values[] = {50,100,150,200,300,500}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"50","100","150","200","300","500"}; 
		default = 50; // Default value; must be listed in 'values' array, otherwise 0 is used
	};
	
  	  class Spacer3 {
     	  title = "";
       	  values[] = {""};
          texts[] = {""};
          default = "";
          };
		  
		  
		  
          class MissionOptions {
          title = "-- VANILLA REVIVE OPTIONS --";
          values[] = {""};
          texts[] = {""};
          default = "";
          };



    #include "Scripts\Params\paramRevive.hpp"
	
	
	
	
		  class Spacer4 {
     	  title = "";
       	  values[] = {""};
          texts[] = {""};
          default = "";
          };
		  
          class EnemyAISettings {
          title = "-- ENEMY AI SETTINGS --";
          values[] = {""};
          texts[] = {""};
          default = "";
          };		  
		  
	class Arty_dist
	{
		title = "Artillery Call Distance  (Minimum distance from players that the enemy AI can call artillery)"; // Param name visible in the list
		values[] = {100,200,300,400,500}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"100 m","200 m","300 m","400 m","500 m"}; 
		default = 100; // Default value; must be listed in 'values' array, otherwise 0 is used
	};		  
		  
	class enemy_skill
	{
		title = "Enemy Skill Level"; // Param name visible in the list
		values[] = {0,1,2,3,4,5,6,7,8,9,10}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"}; 
		default = 4; // Default value; must be listed in 'values' array, otherwise 0 is used
	};		
	
	
	class enemy_aim_skill
	{
		title = "Enemy Aim Skill"; // Param name visible in the list
		values[] = {0,1,2,3,4,5,6,7,8,9,10}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"}; 
		default = 4; // Default value; must be listed in 'values' array, otherwise 0 is used
	};	

	
	
	
		  class Spacer5 {
     	  title = "";
       	  values[] = {""};
          texts[] = {""};
          default = "";
          };

          class performanceSettings {
          title = "-- PERFORMANCE SETTINGS --";
          values[] = {""};
          texts[] = {""};
          default = "";
          };
		  
	class max_Sectors
	{
		title = "Max Active Sectors (Maximum number of sectors that can be activated at a time)"; // Param name visible in the list
		values[] = {1,2,3,4,5,100}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"1","2","3","4","5","NO LIMIT"}; 
		default = 100; // Default value; must be listed in 'values' array, otherwise 0 is used
	};		  
		  
	class Sector_Distance
	{
		title = "Sector Activation Distance  (How close players must be to a zone before it activates)"; // Param name visible in the list
		values[] = {200,300,400,500,600,800,1000}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"200 m","300 m","400 m","500 m","600 m","700 m","1000 m"}; // Description of each selectable item
		default = 600; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};	  
		  
		  
		  
		  class Spacer6 {
     	  title = "";
       	  values[] = {""};
          texts[] = {""};
          default = "";
          };
		  
		  
          class AdminOptions {
          title = "-- DEBUG --";
          values[] = {""};
          texts[] = {""};
          default = "";
          };

	class Debug_setting
	{
		title = "Debug Info"; // Param name visible in the list
		values[] = {0,1}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"OFF","ON"}; 
		default = 0; // Default value; must be listed in 'values' array, otherwise 0 is used
	};



};







//*************************************************************************
//
//              MISSION ENDINGS
//
//*************************************************************************
class CfgDebriefing
{
	
	class noTickets
	{
		title = "Mission Failed";
		subtitle = "";
		description = "There are no reinforcements remaining. The Germans are pushing through to the beachhead.";
		pictureBackground = "";
		picture = "KIA";
		pictureColor[] = {0.0,0.3,0.6,1};
	};
	
	class defenseLose
	{
		title = "Mission Failed";
		subtitle = "";
		description = "The Germans have recaptured Neaville and are pushing towards the beachead.";
		pictureBackground = "";
		picture = "KIA";
		pictureColor[] = {0.0,0.3,0.6,1};
	};
	
	
};










//*************************************************************************
//
//              FUNCTIONS
//
//*************************************************************************

class CfgFunctions {

	class OL
	{
		tag = "OL";
		
		
		class OL_Misc
		{		
			file = "Functions\Misc";
			description = "OL Misc";
			
			class misc_paradrop { };
			class misc_paradrop_load { };
			class misc_set_plane { };
			class misc_cricket { };
			class misc_jukeBox { };
			class misc_player_teleport { };	
			class misc_loadsave { };
			class misc_saveMission { };
			class misc_pickup_intel { };
			class misc_sectorManager { };
			class misc_opfor_ai_skill { };
			
		};
		
		class OL_Arsenal
		{		
			file = "Functions\Arsenal";
			description = "OL Arsenal";
			
			class arsenal_setGlobal { preInit = 1; };
			class arsenal_addObject { };
			
		};	
		
		class OL_EventHandlers
		{		
			file = "Functions\Eventhandlers";
			description = "OL Eventhandlers";
			
			class eh_flak { };
			class eh_startUnitsKilled { };
			
		};		

		class OL_commandMenu
		{		
			file = "Functions\Menu\Command";
			description = "OL Command Menu";
			
			class menu_command_main { };		
			class menu_command_rallypoint { };	
			
		};	
		
		class OL_supplyMenu
		{		
			file = "Functions\Menu\Supply";
			description = "OL Supply Menu";
			
			class menu_supply_main { };			
			class menu_supply_addSupplies { };
			class menu_supply_supplyDrop { };
			class menu_supply_supplyPlane { };			
			class menu_supply_spawnCargo { };
		};	
		
		
		class OL_buildMenu
		{		
			file = "Functions\Menu\Build";
			description = "OL Build Menu";
			
			class menu_build_main { };					
			class menu_build_select { };	
			class menu_lb_change { };
			
		};
		
		
		class OL_recruitMenu
		{		
			file = "Functions\Menu\Recruit";
			description = "OL Recruit Menu";
			
			class menu_recruit_main { };	
			class menu_recruit_added { };
			class menu_recruit_removed { };	
			class menu_recruit_confirm { };			
			
		};
		
		class OL_sectorMenu
		{		
			file = "Functions\Menu\Sector";
			description = "OL Sector Menu";
			
			class sector_notification { };		
			
		};
		
		class OL_squadMenu
		{		
			file = "Functions\Menu\Squad";
			description = "OL Squad Menu";
			
			class menu_squad_main { };		
			class menu_squad_delete_unit { };	
			class menu_squad_delete_all { };
			class menu_squad_rally_point { };	
			class menu_squad_rally_point_all { };	
			class menu_squad_unitSelected { };		
			class menu_squad_move { };
			class menu_squad_disableMove_all { };
			class menu_squad_enableMove_all { };
			class menu_squad_control { };
		};	

		
		class OL_viewMenu
		{		
			file = "Functions\Menu\View";
			description = "OL View Menu";
			
			class view_foot_1 { };
			class view_foot_2 { };
			class view_main { };
			class view_vehicle_1 { };
			class view_vehicle_2 { };
			
		};	
		
		
		class OL_objects
		{		
			file = "Functions\Objects";
			description = "OL Objects";
			
			class object_hold { };
			
		};
		
		class OL_player
		{		
			file = "Functions\Player";
			description = "OL Player Functions";
			
			class player_init { };
			class player_onSpawn { };
			
		};	


		
	};
	

};



//*************************************************************************
//
//              REMOTE EXEC
//
//*************************************************************************
class CfgRemoteExec
{
	class Functions
	{
		/*
		Operation modes:
			0 - remote execution is blocked
			1 - only whitelisted functions / commands are allowed
			2 - remote execution is fully allowed, ignoring the whitelist (default, because of backward compatibility)
		*/
		mode = 2;

		/*
		JIP:
			0 - JIP flag can not be set
			1 - JIP flag can be set (default)
		*/
		jip = 1;

		class BIS_fnc_someFunction
		{
			/*
			Allowed targets:
				0 - can target all machines (default)
				1 - can only target clients, execution on the server is denied
				2 - can only target the server, execution on clients is denied
				Any other value will be treated as 0.
			*/
			allowedTargets = 0;

			//Override the global setting (defined in class Functions) for this function:
			jip = 0;
		};
	};


};






//*************************************************************************
//
//              NOTIFICATIONS
//
//*************************************************************************
class CfgNotifications
{
	class IntelFound
	{
		title = "Intel Found - Check Map for Details";				// Title displayed as text on black background. Filled by arguments.
		iconPicture = "\A3\ui_f\data\map\mapcontrol\taskIcon_ca.paa";		// Small icon displayed in left part. Colored by "color", filled by arguments.
		iconText = "";			// Short text displayed over the icon. Colored by "color", filled by arguments.
		description = "Location Discovered: %1";		// Brief description displayed as structured text. Colored by "color", filled by arguments.
		color[] = {1,1,1,1};	// Icon and text color
		duration = 5;			// How many seconds will the notification be displayed
		priority = 100;			// Priority; higher number = more important; tasks in queue are selected by priority
		difficulty[] = {};		// Required difficulty settings. All listed difficulties has to be enabled
	};

	class SuppliesCaptured
	{
		title = "Supplies Captured";				// Title displayed as text on black background. Filled by arguments.
		iconPicture = "\A3\ui_f\data\map\mapcontrol\taskIcon_ca.paa";		// Small icon displayed in left part. Colored by "color", filled by arguments.
		iconText = "";			// Short text displayed over the icon. Colored by "color", filled by arguments.
		description = "%1 Supplies added to reserve.";		// Brief description displayed as structured text. Colored by "color", filled by arguments.
		color[] = {1,1,1,1};	// Icon and text color
		duration = 5;			// How many seconds will the notification be displayed
		priority = 0;			// Priority; higher number = more important; tasks in queue are selected by priority
		difficulty[] = {};		// Required difficulty settings. All listed difficulties has to be enabled
	};
	
	class SuppliesDrop
	{
		title = "Supply Drop Requested";				// Title displayed as text on black background. Filled by arguments.
		iconPicture = "\A3\ui_f\data\map\mapcontrol\taskIcon_ca.paa";		// Small icon displayed in left part. Colored by "color", filled by arguments.
		iconText = "";			// Short text displayed over the icon. Colored by "color", filled by arguments.
		description = "Check map for expected location.";		// Brief description displayed as structured text. Colored by "color", filled by arguments.
		color[] = {1,1,1,1};	// Icon and text color
		duration = 5;			// How many seconds will the notification be displayed
		priority = 0;			// Priority; higher number = more important; tasks in queue are selected by priority
		difficulty[] = {};		// Required difficulty settings. All listed difficulties has to be enabled
	};
	
};








//*************************************************************************
//
//              PICS
//
//*************************************************************************

class RscTitles {

	titles[]={};
	
	class intro
	{
		idd=-1;
		movingEnable=0;
		duration=4;
		fadein=1;
		fadeout=1.9;
		name="intro";
		controls[]={"title1"};

		class title1
		{
			type=0;
			idc=-1;
			size=1;
			colorBackground[]={0,0,0,0};
			colorText[]={1,1,1,1};
			font = "PuristaMedium";
			text="Pics\control_pic_test.paa";
			style = 48 + 0x800;
			sizeEx=0.15;
			x=0.2;
			y=0.4;
			w=0.6;
			h=0.168;
		};
	};
	
	
	
	
	class RscSectorNotification
	{
	
		idd = 59321;
		fadein = 0;
		fadeout = 3;
		duration = 4;
		onLoad = "uiNamespace setVariable ['dynamic_ui', _this select 0];";
		onUnLoad = "uiNamespace setVariable ['dynamic_ui', nil]";
		
		class Controls
		{

			class OL_sector_notification_title_1: RscStructuredText
			{
				idc = 200;

				text = "<t size='0.9' shadow='0' align='center' font='RobotoCondensed' >Objective Strength</t>"; //--- ToDo: Localize;
				x = 0.711406 * safezoneW + safezoneX;
				y = 0.016 * safezoneH + safezoneY;
				w = 0.102101 * safezoneW;
				h = 0.0212831 * safezoneH;
				colorBackground[] = {0,0.5,0,1};
				sizeEx = 1 * safezoneH;
			};
			
			class OL_sector_notification_title_2: RscStructuredText
			{
				idc = 2001;

				text = "<t size='0.2'>&#160;</t><br/><t size='1' shadow='0' valign='middle' align='Center' font='RobotoCondensed' >Sector Name:  25</t>"; //--- ToDo: Localize;
				x = 0.711406 * safezoneW + safezoneX;
				y = 0.038 * safezoneH + safezoneY;
				w = 0.101938 * safezoneW;
				h = 0.0322601 * safezoneH;
				colorBackground[] = {-1,-1,-1,0.6};
				sizeEx = 1 * safezoneH;
			};

		};
	
	};	
	
		
	
};

